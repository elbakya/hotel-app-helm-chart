apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.appName}}
  name: {{.Values.appName}}
  namespace: {{.Values.namespace}}
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{.Values.appName}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{.Values.appName}}
    spec:
      containers:
      - image: "{{.Values.image.repository}}:{{.Values.image.imageTag}}"
        imagePullPolicy: IfNotPresent
        name:  hotel-app
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: RDSHOST
          valueFrom:
            secretKeyRef:
              name: my-k8s-secret  # Name of the Kubernetes Secret
              key: db-endpoint
              namespace: external-secrets
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: my-k8s-secret  # Name of the Kubernetes Secret
              key: db-username
              namespace: external-secrets
        - name: RDSPASSWORD
          valueFrom:
            secretKeyRef:
              name: my-k8s-secret  # Name of the Kubernetes Secret
              key: db-password
              namespace: external-secrets
        - name: PORT
          valueFrom:
            secretKeyRef:
              name: my-k8s-secret  # Name of the Kubernetes Secret
              key: PORT
              namespace: external-secrets
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
